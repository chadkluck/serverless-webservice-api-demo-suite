version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      # Install dependencies needed for application
      - cd app
      - npm install
      - cd ..

      # Upgrade AWS CLI to the latest version
      - pip install --upgrade awscli
  
  pre_build:
    commands:

      # Generate Key in SSM for cache-proxy
      - chmod a+x tools/generate-put-keys.sh
      - tools/generate-put-keys.sh $PARAM_STORE_PATH "256" $AWS_REGION $ACCOUNT_ID #keylength needs to correspond with default (or override) specified for CryptSecureDataAlg in template.yml

      # Discover and run unit tests in the 'tests' directory
      #- npm test

  build:
    commands:

      # Use AWS SAM to package the application using AWS CloudFormation
      - aws cloudformation package --template template.yml --s3-bucket $S3_BUCKET --output-template template-export.yml

      # Update the AWS Partition, AWS Region, account ID and project ID in the project ARN in template-configuration.json file so AWS CloudFormation can tag project resources.
      - sed -i.bak 's|\$PARTITION\$|'${PARTITION}'|g;s|\$AWS_REGION\$|'${AWS_REGION}'|g;s|\$ACCOUNT_ID\$|'${ACCOUNT_ID}'|g;s|\$PROJECT_ID\$|'${PROJECT_ID}'|g;s|\$PROJECT_STAGE_ID\$|'${PROJECT_STAGE_ID}'|g;s|\$DEPLOY_ENVIRONMENT\$|'${DEPLOY_ENVIRONMENT}'|g;s|\$DEPLOY_STAGE\$|'${DEPLOY_STAGE}'|g' template-configuration.json

artifacts:
  files:
    - template-export.yml
    - template-configuration.json