openapi: '3.0.0'
info:
  title: "Demo Template"
  description: "A template for serverless applications."
  version: "0.1"
  contact:
    name: "Your Name"
    url: "https://example.com"
    email: "contact@example.com"
  license:
    name: "CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)"
    url: "https://example.com"
paths: 
  /:
    get:
      description: "Root endpoint that lists available endpoints and examples."
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
    post:
      description: "Root endpoint that lists available endpoints and examples."
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
  /8ball:
    get:
      description: "Predictions from a magical endpoint. (For entertainment purposes only)"
      parameters:
        - $ref: '#/components/parameters/BallCode'
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BallResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
    post:
      description: "Predictions from a magical endpoint. (For entertainment purposes only)"
      parameters:
        - $ref: '#/components/parameters/BallCode'
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BallResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
  /games:
    get:
      description: "A list of games. Is it a simulation?"
      parameters:
        - $ref: '#/components/parameters/GamesCode'
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
    post:
      description: "A list of games. Is it a simulation?"
      parameters:
        - $ref: '#/components/parameters/GamesCode'
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
  /eluna:
    get:
      description: "Example endpoint from ELUNA conference presentation."
      parameters:
        - $ref: '#/components/parameters/ELUNACode'
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ELUNAResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
    post:
      description: "Example endpoint from ELUNA conference presentation."
      parameters:
        - $ref: '#/components/parameters/ELUNACode'
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ELUNAResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
  /umwug:
    get:
      description: "Example endpoint from UMWUG conference presentation."
      parameters:
        - $ref: '#/components/parameters/UMWUGCode'
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UMWUGResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
    post:
      description: "Example endpoint from UMWUG conference presentation."
      parameters:
        - $ref: '#/components/parameters/UMWUGCode'
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UMWUGResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
  /weather:
    get:
      description: "Example endpoint for weather information."
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
    post:
      description: "Example endpoint for weather information."
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
  /test:
    get:
      description: "Example endpoint for test data."
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
    post:
      description: "Example endpoint for test data."
      responses:
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponseObject'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
  /echo:
    get:
      description: "Example endpoint for submitting a request for a particular response such as a loop back, HTTP status code, or response body."
      responses:
        '100':
          description: "Continue"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '101':
          description: "Switching Protocols"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseObject'
        '201':
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '202':
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '203':
          description: "Non-Authoritative Information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '204':
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '205':
          description: "Reset Content"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '206':
          description: "Partial Content"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '300':
          description: "Multiple Choices"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '301':
          description: "Moved Permanently"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseRedirect'
        '302':
          description: "Moved Temporarily"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseRedirect'
        '303':
          description: "See Other"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '304':
          description: "Not Modified"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseNotModified'
        '305':
          description: "Use Proxy"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations
    post:
      description: "Example endpoint for submitting a request for a particular response such as a loop back, HTTP status code, or response body."
      responses:
        '100':
          description: "Continue"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '101':
          description: "Switching Protocols"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '200':
          description: "Response OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseObject'
        '201':
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '202':
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '203':
          description: "Non-Authoritative Information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '204':
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '205':
          description: "Reset Content"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '206':
          description: "Partial Content"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '300':
          description: "Multiple Choices"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '301':
          description: "Moved Permanently"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseRedirect'
        '302':
          description: "Moved Temporarily"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseRedirect'
        '303':
          description: "See Other"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
        '304':
          description: "Not Modified"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseNotModified'
        '305':
          description: "Use Proxy"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
    # '401': 'Unauthorized',
    # '402': 'Payment Required',
    # '403': 'Forbidden',
    # '404': 'Not Found',
    # '405': 'Method Not Allowed',
    # '406': 'Not Acceptable',
    # '407': 'Proxy Authentication Required',
    # '408': 'Request Time-out',
    # '409': 'Conflict',
    # '410': 'Gone',
    # '411': 'Length Required',
    # '412': 'Precondition Failed',
    # '413': 'Request Entity Too Large',
    # '414': 'Request-URI Too Large',
    # '415': 'Unsupported Media Type',
    # '418': 'I\'m a teapot',

        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'

    # '501': 'Not Implemented',
    # '502': 'Bad Gateway',
    # '503': 'Service Unavailable',
    # '504': 'Gateway Timeout',
    # '505': 'HTTP Version Not Supported'

        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponseCode'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppFunction.Arn}/invocations


components:
  parameters:
    BallCode:
      name: code
      in: query
      description: "Specify a specific data point to return from the 8 Ball endpoint. If not included, or invalid, all data points are returned."
      schema:
        type: string
        enum:
          - list
          - prediction
          - luckynumbers
          - certainty
    GamesCode:
      name: code
      in: query
      description: "Specify a specific data point to return from the Games endpoint. If not included, or invalid, all data points are returned."
      schema:
        type: string
        enum:
          - greeting
          - name
          - random
          - list
    ELUNACode:
      name: code
      in: query
      description: "Specify a specific data point to return from the Games endpoint. If not included, or invalid, all data points are returned."
      schema:
        type: string
        enum:
          - bao
          - cbl
          - lvp
          - cpe
          - dev
          - doc
          - lhf
          - git
          - bns
          - 8bl
    UMWUGCode:
      name: code
      in: query
      description: "Specify a specific data point to return from the Games endpoint. If not included, or invalid, all data points are returned."
      schema:
        type: string
        enum:
          - bao
          - cbl
          - lvp
          - cpe
          - dev
          - doc
          - lhf
          - git
          - bns

  schemas:
    RootResponseObject:
      description: "A response object with endpoint examples"
      type: object
      properties:
        greeting:
          description: "A greeting from the web service"
          type: string
        github:
          description: "GitHub repository to download latest version of this demo suite"
          type: string
        description:
          description: "The description of this web service"
          type: string
        available_endpoints:
          description: "A list of available endpoints with examples"
          type: array
          items:
            type: object
            properties:
              name:
                description: "Name of the endpoint"
                type: string
              description:
                description: "A description of the endpoint"
                type: string
              methods:
                description: "Methods the endpoint will accept"
                type: array
                items:
                  type: string
              path:
                description: "Path to the endpoint"
                type: string
              examples:
                description: "A list of examples to use against the endpoint"
                type: array
                items:
                  description: "An endpoint example"
                  type: string
              
    BallResponseObject:
      description: "A magical response object (for entertainment purposes only)"
      type: object
      properties:
        prediction:
          description: "An insightful answer to a yes or no question"
          type: string
        lucky_numbers:
          description: "An array of 6 unique and lucky integers between 1 and 99"
          type: array
          minItems: 6
          maxItems: 6
          uniqueItems: true
          items:
            type: integer
            minimum: 1
            maximum: 99
        certainty:
          description: "The amount of certainly given to a prediction"
          type: float
          minimum: 0
          maximum: 1
          exclusiveMaximum: true

    GamesResponseObject:
      description: "A response object containing data"
      type: object
      properties:
        gamechoices:
          description: "A list of games to play"
          type: array
          items:
            type: string
        game:
          description: "A random game picked from the list of gamechoices"
          type: string
        hiddengames:
          description: "A list of hidden games not on the gamechoices list"
          type: array
          items:
            type: string
        greeting:
          description: "A greeting"
          type: string
        name:
          description: "A name for the computer"
          type: string

    ELUNAResponseObject:
      description: "A response object containing data"
      type: object

    UMWUGResponseObject:
      description: "A response object containing data"
      type: object

    WeatherResponseObject:
      description: "A response object containing weather data"
      type: object

    TestResponseObject:
      description: "A response object containing data"
      type: object

    EchoResponseCode:
      description: "A response object containing data"
      type: object

    EchoResponseRedirect:
      description: "A response object containing data"
      type: object

    EchoResponseNotModified:
      description: "A response object containing data"
      type: object

    EchoResponseObject:
      description: "A response object containing data"
      type: object